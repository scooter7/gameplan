/* ──────────────────────────────────────────────────────────────────────────────
   /src/styles/globals.css
   (Drop this file into your project and import it from _app.tsx)
────────────────────────────────────────────────────────────────────────────── */

/* =============================================================================
   0) IMPORT TAILWIND LAYERS
   ============================================================================= */
/* These three lines allow Tailwind’s base, component, and utility classes. */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* =============================================================================
   1) CUSTOM FONT‐FACES
   (We assume that you dropped these .otf files exactly into public/fonts/)
   ============================================================================= */
@font-face {
  font-family: "HeroNew";
  font-weight: 200;
  src: url("/fonts/HeroNew-UltraLight.otf") format("opentype");
}
@font-face {
  font-family: "HeroNew";
  font-weight: 300;
  src: url("/fonts/HeroNew-Light.otf") format("opentype");
}
@font-face {
  font-family: "HeroNew";
  font-weight: 500;
  src: url("/fonts/HeroNew-Medium.otf") format("opentype");
}
@font-face {
  font-family: "NewSpirit";
  font-weight: 400;
  src: url("/fonts/NewSpirit-Regular.otf") format("opentype");
}
@font-face {
  font-family: "NewSpirit";
  font-weight: 600;
  src: url("/fonts/NewSpirit-SemiBold.otf") format("opentype");
}

/* =============================================================================
   2) CSS VARIABLES (LIFERAMP PALETTE + TYPOGRAPHY + SPACING + SHADOWS)
   ============================================================================= */
:root {
  /* — LifeRamp Palette — */
  --color-primary:        #32db86; /* a bright green  */
  --color-primary-light:  #4ee7a5;
  --color-secondary:      #2d2ea8; /* a deep blue    */
  --color-secondary-dark: #1a2565; /* very dark blue */
  --color-tertiary:       #fdd703; /* accent yellow  */
  --color-error:          #f21d44; /* red for errors */

  --color-bg:             #f7f5f5; /* very light rose-ish */
  --color-surface:        #ffffff; /* pure white cards    */
  --color-text-primary:   #000000; /* black */
  --color-text-secondary: #555555; /* dark gray */

  /* — Typography Families — */
  --font-body:    "NewSpirit", sans-serif;
  --font-heading: "HeroNew",   sans-serif;

  /* — Spacing Scale — */
  --space-xs: 4px;
  --space-sm: 8px;
  --space-md: 16px;
  --space-lg: 24px;
  --space-xl: 32px;

  /* — Border Radius — */
  --radius-sm:   4px;
  --radius-md:   8px;
  --radius-lg:  16px;
  --radius-pill: 9999px;

  /* — Shadows — */
  --shadow-sm:  0 1px 3px rgba(0,0,0,0.12);
  --shadow-md:  0 4px 6px rgba(0,0,0,0.10);
  --shadow-lg:  0 10px 20px rgba(0,0,0,0.15);

  /* — Transitions — */
  --transition-fast: 150ms ease-out;
  --transition-med:  300ms ease;
  --transition-slow: 500ms ease-in-out;
}

/* =============================================================================
   3) GLOBAL RESET & BASE STYLES
   ============================================================================= */
*,
*::before,
*::after {
  box-sizing: border-box;
  transition: box-shadow var(--transition-med),
              transform   var(--transition-med);
}

html {
  -webkit-font-smoothing: antialiased;
  scroll-behavior: smooth;
  font-size: 100%;
}

body {
  margin: 0;
  padding: 0;
  font-family: var(--font-body);
  font-weight: 400;
  line-height: 1.6;
  color: var(--color-text-primary);
  background-color: var(--color-bg);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

img,
video {
  max-width: 100%;
  display: block;
}

a {
  color: var(--color-primary);
  text-decoration: none;
  transition: color var(--transition-fast);
}
a:hover {
  color: var(--color-secondary);
  text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
  margin: 0 0 var(--space-sm);
  font-family: var(--font-heading);
  line-height: 1.2;
}
h1 { font-size: clamp(1.75rem, 4vw, 2.5rem); }
h2 { font-size: clamp(1.5rem, 3vw, 2rem); }
h3 { font-size: clamp(1.25rem, 2.5vw, 1.75rem); }

p, ul, ol {
  margin: 0 0 var(--space-md);
}

/* =============================================================================
   4) BUTTONS (PILL‐SHAPED) & FORM INPUTS
   ============================================================================= */
/* — Base “.button” — */
.button {
  display: inline-block;
  font-family: var(--font-body);
  font-weight: 600;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: var(--radius-pill);
  cursor: pointer;
  transition: transform var(--transition-fast),
              box-shadow var(--transition-fast);
}

/* — Primary Button (green → blue gradient) — */
.button-primary {
  background: linear-gradient(
    135deg,
    var(--color-primary-light),
    var(--color-secondary)
  );
  color: var(--color-surface);
  box-shadow: var(--shadow-sm);
}
.button-primary:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}
.button-primary:active:not(:disabled) {
  transform: translateY(0);
  box-shadow: var(--shadow-sm);
}

/* — Secondary Outline Button — */
.button-secondary {
  background: transparent;
  color: var(--color-secondary-dark);
  border: 2px solid var(--color-secondary-dark);
}
.button-secondary:hover:not(:disabled) {
  background: var(--color-secondary-dark);
  color: var(--color-surface);
}

/* — Disabled State — */
.button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

/* — Form Inputs, Selects, Textareas — */
.input,
select,
textarea {
  font-family: var(--font-body);
  font-size: 1rem;
  padding: var(--space-sm) var(--space-md);
  border: 2px solid #ddd;
  border-radius: var(--radius-md);
  width: 100%;
  box-sizing: border-box;
  transition: border-color var(--transition-fast),
              box-shadow   var(--transition-fast);
}
.input:focus,
select:focus,
textarea:focus {
  outline: none;
  border-color: var(--color-secondary-dark);
  box-shadow: 0 0 0 3px rgba(26,37,101,0.2);
}

/* =============================================================================
   5) CARD CONTAINER & PANEL STYLES
   ============================================================================= */
/* A simple “card” class you can drop around any panel (profile form, chat container, etc.) */
.card {
  background: var(--color-surface);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-sm);
  padding: var(--space-md);
}

/* =============================================================================
   6) FLASHCARD FLIP‐ANIMATION STYLES
   (Matches the React code’s flip‐card JSX structure)
   ============================================================================= */
.flashcard-container {
  perspective: 1000px;
  width: 100%;
  min-height: 350px;
}

.flashcard {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.7s cubic-bezier(0.3, 0, 0.2, 1);
  border-radius: 0.75rem; /* 12px */
}
.flashcard.is-flipped {
  transform: rotateY(180deg);
}

.flashcard-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  border-radius: 0.75rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  padding: 1.5rem;
  overflow: hidden;
}
.flashcard-front {
  background-color: var(--color-surface);
}
.flashcard-back {
  background-color: var(--color-bg);
  transform: rotateY(180deg);
  align-items: center;
  justify-content: center;
  text-align: center;
}

.flashcard-content-scrollable {
  flex-grow: 1;
  overflow-y: auto;
  min-height: 0;
}

/* =============================================================================
   7) VISUALLY HIDDEN (accessibility helper)
   ============================================================================= */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* =============================================================================
   8) PAGE‐SPECIFIC BACKGROUNDS (FOR SIGNIN/REGISTER/PROFILE/CHAT)
   (We assume you’ll conditionally add these classes on your <main> or <div>)
   ============================================================================= */
/* Place your images into public/images/ with exactly these names */
.bg-insights {
  background: url("/images/LifeRamp_Insights_and_Analytics.jpg") center/cover no-repeat;
}
.bg-assessment {
  background: url("/images/LifeRamp_Assessment.jpg") center/cover no-repeat;
}
.bg-connect {
  background: url("/images/LifeRamp_Connect.jpg") center/cover no-repeat;
}
.bg-liferamp {
  background: url("/images/LifeRamp_LifeRamp.jpg") center/cover no-repeat;
}

/* Light overlay to ensure legibility */
.bg-insights::before,
.bg-assessment::before,
.bg-connect::before,
.bg-liferamp::before {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(255, 255, 255, 0.6);
  pointer-events: none;
  z-index: 0;
}

/* Ensure content floats above the overlay */
.page-container > *,
.chat-container > *,
.auth-container > *,
.profile-container > * {
  position: relative;
  z-index: 1;
}

/* ──────────────────────────────────────────────────────────────────────────────
   END OF /src/styles/globals.css
────────────────────────────────────────────────────────────────────────────── */
